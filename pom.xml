<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!-- new 26-03-2019  
    <parent>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>mojo-parent</artifactId>
        <version>50</version>
    </parent>
    -->
    
    
    
    <groupId>lc</groupId>
    <artifactId>GolfWfly</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>GolfWfly</name>
<!-- http://maven.apache.org/guides/introduction/introduction-to-the-pom.html  -->
<description>
    GolfLC application based on JSF 2.3 and Primefaces 7.0 by lc
    11-2019 netbeans is still JSF 2.3 non compliant !!!
</description>
<inceptionYear>2012</inceptionYear>
    <licenses>
        <license>
            <name>CDDL + GPLv2 with Classpath Exception</name>
            <url>https://oss.oracle.com/licenses/CDDL+GPL-1.1</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>
<!--  https://examples.javacodegeeks.com/enterprise-java/maven/maven-dependency-plugin-example/
-->
<properties>
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding> <!-- new 11/05/2014 -->
        <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>
        <mysql.connectorJ.version>8.0.19</mysql.connectorJ.version>  <!-- used by RUN FILE mod 03-11-2019 was 8.0.16 -->
        <primefaces.version>8.0</primefaces.version> <!-- 07-03-2020 : was 7.0-->
        <primefaces.extension.version>8.0</primefaces.extension.version> <!-- mod 07-03-2020 was 7.0 -->
        <!--<primefaces.theme.version>1.0.10</primefaces.theme.version>--> <!-- was 1.0.9 -->
        <omnifaces.version>3.4.1</omnifaces.version> <!-- 14/06/2019 was 3.2 -->
        <junit.version>5.0.0-ALPHA</junit.version> <!-- not used was 4.7 mod 4/6/2016 -->
        <java.version>13</java.version> <!-- for compiler and only used via MyPOM properties was 12 -->
       <!--<maven.compiler.source>1.8</maven.compiler.source>  used before JDK9 -->
       <!--<maven.compiler.target>1.8</maven.compiler.target> used before jdk 9 -->
        <javaee.version>8.0</javaee.version> <!-- was 7.0 mod 26-04-2014 -->
        <java.mail.version>1.6.1</java.mail.version> <!-- was 7.0 mod 26-04-2014 -->
        <javax.activation.version>1.2.0</javax.activation.version> <!-- was 1.2.0 mod 26-04-2014 -->
        <log4j2.version>2.15.0</log4j2.version> <!-- new 05/03/2020  was 2.12.1 mod  -->
        <!--<glassfish.version>4.1.1</glassfish.version>  was 4.1 on 17/10/2015 -->
        <!--<wildfly.version>Wildfly-10.1.0.Final</wildfly.version> not used meme plus pour via MyPOM properties -->
        <hibernate.version>3.5.3.Final</hibernate.version> <!-- only used via MyPOM properties -->
        <maven.version>3.6.3</maven.version> <!-- only used via MyPOM properties -->
  <!--  Maven plugins -->       
        <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version><!-- was 3.8.0 mod 25-05-2019 -->
        <maven.dependency.plugin.version>3.1.1</maven.dependency.plugin.version> <!-- was 3.0.0 mod 14/07/2018 -->
        <maven.clean.plugin.version>3.1.0</maven.clean.plugin.version>
        <maven.resources.plugin.version>3.1.0</maven.resources.plugin.version>
        <maven.war.plugin.version>3.2.3</maven.war.plugin.version> <!-- new 01-11-2019  was 3.2.2 -->
        <!--<maven.install.plugin.version>3.0.0-M1</maven.install.plugin.version> was 2.5.2 mod 25/05/2019 enlevé 05-01-2020 -->
        <maven.wildfly.plugin.version>2.0.2.Final</maven.wildfly.plugin.version> <!--  mod 29-12-2019 was 2.0.1.Final -->
        <maven.properties.plugin.version> </maven.properties.plugin.version>
        <maven.surefire.plugin.version> </maven.surefire.plugin.version>
        <maven.archiver.plugin.version>3.5.0 </maven.archiver.plugin.version>
        <netbeans.compile.on.save>all</netbeans.compile.on.save> <!-- new 27/11/2013 -->
        <!--<mojarra.version>2.2.13.SP4</mojarra.version>  not used only used via MyPOM properties 2.2.13.SP4-->
        <netbeans.version>11.3</netbeans.version> <!-- only used via MyPOM properties 
voir plus bas <artifactId>properties-maven-plugin</artifactId>-->
        
        <timestamp>${maven.build.timestamp}</timestamp> <!-- see https://dzone.com/articles/stamping-version-number-and -->
        <build.timestamp>${maven.build.timestamp}</build.timestamp>
        <jackson.version>2.10.3</jackson.version> <!--mod 09-03-2020 was 2.10.1 -->
        <version.jboss.bom>10.0.0.Final</version.jboss.bom>
        <apache.shiro.version>1.3.2</apache.shiro.version> <!-- new 24-12-2017 1.4.0 gives errors -->
        <itext.version>2.1.7</itext.version>
        <verbose>true</verbose>
      <!--  <xnio.version>3.7.0.Final</xnio.version> mod 07-03/2019  was 3.6.5  -->
</properties>
<!-- not used  ne sert à rien, continue à utiliser le 1.2.1
https://github.com/SeleniumHQ/selenium/issues/5009
<dependencyManagement>
     <dependencies>
        <dependency>

        </dependency>
      </dependencies>
 </dependencyManagement>
 -->
  <developers> 
		<developer> 
			<id>LC</id> 
			<name>Louis Collet</name> 
			<email>louis.collet@skynet.be</email> 
			<roles> 
				<role>Owner</role> 
				<role>Buildmaster</role> 
				<role>Developer</role> 
			</roles> 
			<timezone>+1</timezone> 
		</developer> 
</developers> 

  
<dependencies>
<!-- new 1/3/2016 http://doduck.fr/maven-ajouter-local-jar/ -->
      <dependency>
         <groupId>com</groupId>
         <artifactId>jEidlib</artifactId>
         <version>1.1</version>
      </dependency>
<!--
    <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>${javaee.version}</version>
            <scope>provided</scope>
        </dependency>

 http://www.adam-bien.com/roller/abien/entry/java_ee_8_to_jakarta mod 06-02-2020 
<dependency>
    <groupId>jakarta.platform</groupId>
    <artifactId>jakarta.jakartaee-api</artifactId>
    <version>8.0.0</version>
    <scope>provided</scope>
</dependency> 
-->

<dependency>
    <groupId>javax</groupId>
    <artifactId>javaee-api</artifactId>
    <version>8.0</version>
    <scope>provided</scope>
</dependency>


<dependency>
    <groupId>org.omnifaces</groupId>
    <artifactId>omnifaces</artifactId>
    <version>${omnifaces.version}</version>
</dependency>
<!-- enlevé 10/6/2016 - intégré à PG 6.0 -->
<dependency>
    <groupId>org.primefaces.extensions</groupId>
    <artifactId>primefaces-extensions</artifactId>
    <version>${primefaces.extension.version}</version>
</dependency>
<!--  new 04-03-2019  -->
<dependency>
  <groupId>org.primefaces.extensions</groupId>
  <artifactId>resources-ckeditor</artifactId>
  <version>${primefaces.extension.version}</version>
</dependency>

<!-- https://mvnrepository.com/artifact/org.primefaces/primefaces -->
<dependency>
    <groupId>org.primefaces</groupId>
    <artifactId>primefaces</artifactId>
    <version>${primefaces.version}</version>
</dependency>

<!-- http://mvnrepository.com/artifact/org.apache.commons/commons-lang3 
<dependency>
    <groupId>org.apache.commons</groupId>
    <artifactId>commons-lang3</artifactId>
    <version>3.4</version>
</dependency>

13-05-2018 ajouté scope runtime
http://maven-guide-fr.erwan-alliaume.com/maven-reference-fr/site/reference/pom-relationships-sect-project-dependencies.html
runtime
Les dépendances du scope runtime sont des dépendances nécessaires à l'exécution de l'application et des tests,
 mais qui sont inutiles à la compilation. Par exemple, vous pouvez avoir besoin d'un JAR pour l'API JDBC à la compilation
 et uniquement de l'implémentation du driver JDBC à l'exécution.
-->
<!-- new 27/08/2014  <scope>runtime</scope>
     <type>jar</type>
http://logging.apache.org/log4j/2.x/maven-artifacts.html 
good ewample : https://stackify.com/log4j2-java/-->
<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-api</artifactId>
    <version>${log4j2.version}</version>
    <type>pom</type>
  </dependency>
  
  <dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-core</artifactId>
    <version>${log4j2.version}</version>
  </dependency>
<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-web</artifactId>
    <version>${log4j2.version}</version>
    </dependency>
<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-web -->

<!-- new 8/8/2013 -->
<dependency>
      <groupId>javax.batch</groupId>
      <artifactId>javax.batch-api</artifactId>
      <version>1.0</version>
      <scope>provided</scope>
</dependency>
<!--      new 22/06/2013 -->
<dependency>
  <groupId>javax.mail</groupId>
  <artifactId>javax.mail-api</artifactId>
  <version>${java.mail.version}</version>
  <scope>provided</scope>
</dependency> 
<!--      new 09/04/2018 -->
<dependency>
                <groupId>com.sun.mail</groupId>
                <artifactId>javax.mail</artifactId>
                <version>${java.mail.version}</version>
            </dependency>
<!--   mod 29-12-2017 was 1.5.5 <scope>provided</scope>mod 21/07/2016 was 1.5.4 mais utilise 1.5.5 de wildfly !! -->
<dependency>
    <groupId>javax.activation</groupId>
    <artifactId>javax.activation-api</artifactId>
    <version>${javax.activation.version}</version>
</dependency>

<!--   new 08/03/2017
Compile means that you need the JAR for compiling and running the app. For a web application, as an example,
 the JAR will be placed in the WEB-INF/lib directory. 

Provided means that you need the JAR for compiling, but at run time there is already a JAR provided
 by the environment so you don't need it packaged with your app. For a web app, this means that
 the JAR file will not be placed into the WEB-INF/lib directory. 

For a web app, if the app server already provides the JAR (or its functionality), then use "provided" 
otherwise use "compile".

à installer manuellement (ne se trouve plus dans maven)
Dependencies, right clic on jEidlib-1.1.jar > Manually install artifact > browse artifact to install


        compile

        This is the default scope, used if none is specified. Compile dependencies are available in all classpaths 
of a project. Furthermore, those dependencies are propagated to dependent projects.

        provided

        This is much like compile, but indicates you expect the JDK or a container to provide the dependency at runtime.
 For example, when building a web application for the Java Enterprise Edition, you would set the dependency 
on the Servlet API and related Java EE APIs to scope provided because the web container provides those classes.
 This scope is only available on the compilation and test classpath, and is not transitive.


<dependency> deleted 19/11/2017
	<groupId>commons-io</groupId>
	<artifactId>commons-io</artifactId>
	<version>2.6</version> 
</dependency>
-->
<dependency> <!-- new 24/12/2014  -->
	<groupId>commons-fileupload</groupId>
	<artifactId>commons-fileupload</artifactId>
	<version>1.4</version> <!-- mod 03/01/2019  was 1.3.3 -->
</dependency>

<!-- https://mvnrepository.com/artifact/org.apache.tika/tika-java7 new 03-01-2020
ava-7 reliant components, including FileTypeDetector implementations
                    https://stackoverflow.com/questions/54078118/managed-bean-with-a-parameterized-bean-class-must-be-dependent-class-org-apach/55210108
                            Exclude otherwise the following error is thrown:
                                    WELD-000071: Managed bean with a parameterized bean class 
                                    must be @Dependent: class org.apache.cxf.jaxrs.provider.XPathProvider 
-->
<dependency>
    <groupId>org.apache.tika</groupId>
    <artifactId>tika-java7</artifactId>
    <version>1.23</version>
    <exclusions>
                    <exclusion>
                            <artifactId>cxf-rt-rs-client</artifactId>
                            <groupId>org.apache.cxf</groupId>
                    </exclusion>
    </exclusions>
</dependency>

<dependency>
    <groupId>org.apache.tika</groupId>
    <artifactId>tika-parsers</artifactId>
    <version>1.23</version>
    <exclusions>
                    <exclusion>
                            <artifactId>cxf-rt-rs-client</artifactId>
                            <groupId>org.apache.cxf</groupId>
                    </exclusion>
    </exclusions>
</dependency>
<dependency>
    <groupId>org.apache.pdfbox</groupId>
    <artifactId>jbig2-imageio</artifactId>
    <version>3.0.0</version>
</dependency>

<dependency>
            <groupId>com.lowagie</groupId>
            <artifactId>itext</artifactId>
            <version>${itext.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>bouncycastle</groupId>
                    <artifactId>bcmail-jdk14</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>bouncycastle</groupId>
                    <artifactId>bcprov-jdk14</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.bouncycastle</groupId>
                    <artifactId>bctsp-jdk14</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
<!-- new 9/8/2013 -->
 <dependency>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-clean-plugin</artifactId>
    <version>${maven.clean.plugin.version}</version> <!-- mod 25/09/2018 was fixed value -->
</dependency> 

<dependency>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-resources-plugin</artifactId>
    <version>${maven.resources.plugin.version}</version> <!-- mod 25-09-2018 was fixed value -->
</dependency>

<dependency>
	<groupId>org.ostermiller</groupId>
	<artifactId>utils</artifactId>
	<version>1.07.00</version> <!-- was 1.07.00 mod 06-12-2017.-->
</dependency>

<dependency>
  <groupId>net.coobird</groupId>
  <artifactId>thumbnailator</artifactId>
  <version>0.4.11</version> <!-- 02/2020 was 0.4.8 always a download ...-->
</dependency>

<dependency>
	<groupId>net.jpountz.lz4</groupId>
	<artifactId>lz4</artifactId>
	<version>1.3.0</version>
    <type>jar</type>
</dependency>

<!-- new 19/04/2015 see  http://www.beyondjava.net/blog/bootsfaces-0-6-0-now-available-on-maven-central/ 
                 AND 
                 http://www.bootsfaces.net/integration/PrimeFaces.jsf
                 -->
<dependency>
    <groupId>net.bootsfaces</groupId>
    <artifactId>bootsfaces</artifactId>
    <version>0.8.1</version> <!-- mod 21/7/2016 faut conserver 0.8.1 sinon fonctionne plus du tout
ne pas toucher sert à quoi ?? -->
    <scope>compile</scope>
</dependency>

<!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
<dependency>
    <groupId>org.junit.jupiter</groupId>
    <artifactId>junit-jupiter-api</artifactId>
    <version>5.0.0-M3</version>
</dependency>

<dependency>
    <groupId>org.wildfly.plugins</groupId>
    <artifactId>wildfly-maven-plugin</artifactId>
    <version>${maven.wildfly.plugin.version}</version>
</dependency>

<!-- https://mvnrepository.com/artifact/org.apache.maven/maven-plugin-api -->
<dependency>
    <groupId>org.apache.maven</groupId>
    <artifactId>maven-plugin-api</artifactId>
    <version>${maven.version}</version><!-- was 3.5.3  -->
</dependency>
<!-- https://mvnrepository.com/artifact/org.apache.maven/maven-core -->
<dependency>
    <groupId>org.apache.maven</groupId>
    <artifactId>maven-core</artifactId>
    <version>${maven.version}</version><!-- was 3.5.3  -->
</dependency>
<!-- https://mvnrepository.com/artifact/com.lmax/disruptor -->
<dependency>
    <groupId>com.lmax</groupId>
    <artifactId>disruptor</artifactId>
    <version>3.3.6</version>
</dependency>
<!-- https://mvnrepository.com/artifact/com.google.maps/google-maps-services 
https://github.com/googlemaps/google-maps-services-java/tree/master/src/main/java/com/google/maps
-->
<dependency>
    <groupId>com.google.maps</groupId>
    <artifactId>google-maps-services</artifactId>
    <version>0.11.0</version> <!--   was 0.9.1 mod 07-03-2020 -->
            <exclusions>
                <exclusion>
                    <groupId>com.google.code.gson</groupId>
                    <artifactId>gson</artifactId>
                </exclusion>
            </exclusions>
</dependency>
<!-- https://mvnrepository.com/artifact/com.google.appengine/appengine-api-1.0-sdk 
<dependency>
    <groupId>com.google.appengine</groupId>
    <artifactId>appengine-api-1.0-sdk</artifactId>
    <version>1.9.78</version>   mod 07-03-2020 was 1.9.71 
</dependency>
-->
<!--
<dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-databind</artifactId>
    <version>${jackson.version}</version>
  </dependency>
  -->
    <!-- added 14/07/2018 all jackson needed 
  <dependency>
  <groupId>com.fasterxml.jackson</groupId>
  <artifactId>jackson-bom</artifactId>
  <version>${jackson.version}</version>
</dependency>
  -->
  
  
  <!-- added 14/07/2018 suite analyze-only l -->
  <dependency>
  <groupId>com.fasterxml.jackson.core</groupId>
  <artifactId>jackson-core</artifactId>
  <version>${jackson.version}</version>
</dependency>
<dependency>
  <groupId>com.fasterxml.jackson.core</groupId>
  <artifactId>jackson-annotations</artifactId>
  <version>${jackson.version}</version>
</dependency>

 <!-- new 18-01-2019 try silve error Cannot construct instance of
`java.time.LocalDateTime` (no Creators, like default construct, exist): 
    https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310-->
<dependency>
    <groupId>com.fasterxml.jackson.datatype</groupId>
    <artifactId>jackson-datatype-jsr310</artifactId>
    <version>${jackson.version}</version>
</dependency>
<!--
<dependency> 
    <groupId>com.fasterxml.jackson.datatype</groupId>
    <artifactId>jackson-datatype-jdk8</artifactId>
    <version>${jackson.version}</version>
</dependency>
   -->
    
 <dependency>   
  <groupId>javax.activation</groupId>
  <artifactId>activation</artifactId>
  <version>1.1</version>
</dependency>
<dependency>
  <groupId>backport-util-concurrent</groupId>
  <artifactId>backport-util-concurrent</artifactId>
  <version>3.1</version>
</dependency>
  
  
<!--   new 08/04/2017 -->
<dependency>
  <groupId>com.luckycatlabs</groupId>
  <artifactId>SunriseSunsetCalculator</artifactId>
  <version>1.2</version>
</dependency>

<dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>slf4j-nop</artifactId>
    <version>1.7.29</version><!-- was 1.7.26 mod 10-11-2019 -->
</dependency>

<dependency>
    <groupId>net.aksingh</groupId>
    <artifactId>owm-japis</artifactId>
    <version>2.5.3.0</version><!-- was 2.5.2.3 mod 23-07-2019 -->
  <!--   <exclusions>
    <exclusion>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
     </exclusion>
    </exclusions> -->
</dependency>

<!--  https://stackoverflow.com/questions/50586449/java-lang-nosuchmethoderror-com-google-gson-gsonbuilder-setlenientlcom-google -->

<!-- https://mvnrepository.com/artifact/com.google.code.gson/gson <scope>provided</scope>--> 
<dependency>
    <groupId>com.google.code.gson</groupId>
    <artifactId>gson</artifactId>
    <version>2.8.6</version> <!-- mod 10/11/2019 was 2.8.5 -->
    <scope>compile</scope><!-- mod 31/01/2020 was compile -->
</dependency>

<!-- https://mvnrepository.com/artifact/com.squareup.retrofit2/retrofit 
<dependency>
    <groupId>com.squareup.retrofit2</groupId>
    <artifactId>retrofit</artifactId>
    <version>2.5.0</version>
</dependency>
-->

<!-- https://mvnrepository.com/artifact/com.squareup.retrofit2/converter-gson 
<dependency>
    <groupId>com.squareup.retrofit2</groupId>
    <artifactId>converter-gson</artifactId>
    <version>2.5.0</version>
</dependency>
-->

<!-- https://mvnrepository.com/artifact/com.squareup.okio/okio 
<dependency>
    <groupId>com.squareup.okio</groupId>
    <artifactId>okio</artifactId>
    <version>1.14.0</version>
</dependency>
-->
<!-- https://mvnrepository.com/artifact/io.github.jnasmartcardio/jnasmartcardio -->
<dependency>
    <groupId>io.github.jnasmartcardio</groupId>
    <artifactId>jnasmartcardio</artifactId>
    <version>0.2.7</version>
</dependency>



 <!-- https://mvnrepository.com/artifact/org.passay/passay 
<dependency>
    <groupId>org.passay</groupId>
    <artifactId>passay</artifactId>
    <version>1.3.1</version>
</dependency>-->
<!-- https://mvnrepository.com/artifact/org.mnode.ical4j/ical4j  new 30-10-2018-->
<dependency>
    <groupId>org.mnode.ical4j</groupId>
    <artifactId>ical4j</artifactId>
    <version>3.0.13</version> <!-- was 3.0.11 mod 10-02-2020 -->
</dependency>
<!-- https://mvnrepository.com/artifact/org.codehaus.mojo/exec-maven-plugin  new 05-11-2018-->
<dependency>
    <groupId>org.codehaus.mojo</groupId>
    <artifactId>exec-maven-plugin</artifactId>
    <version>1.6.0</version>
</dependency>

<dependency>
   <groupId>com.github.fedy2</groupId>
   <artifactId>yahoo-weather-java-api</artifactId>
   <version>2.0.2</version>
</dependency>

<dependency>
  <!-- jsoup HTML parser library @ https://jsoup.org/ 
    -->
  <groupId>org.jsoup</groupId>
  <artifactId>jsoup</artifactId>
  <version>1.11.3</version>
  <!--  https://www.slf4j.org/codes.html#multiple_bindings -->
      <exclusions>
      <exclusion> 
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
      </exclusion>
      <exclusion> 
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
      </exclusion>
    </exclusions> 
  
</dependency>

<!-- https://mvnrepository.com/artifact/org.aesh/aesh-readline-all 
<dependency>
    <groupId>org.aesh</groupId>
    <artifactId>aesh-readline-all</artifactId>
    <version>1.10</version>
    <type>pom</type>
</dependency>
-->
<!-- les 2 qui suivent nécessaire pour jdk11 api sortie de Java-->
<dependency>
    <groupId>javax.annotation</groupId>
    <artifactId>javax.annotation-api</artifactId>
    <version>1.3.2</version>
</dependency>
<dependency>
    <groupId>javax.xml.bind</groupId>
    <artifactId>jaxb-api</artifactId>
    <version>2.3.0</version>
</dependency>
<!-- 2.2.11
<dependency>
    <groupId>com.sun.xml.bind</groupId>
    <artifactId>jaxb-core</artifactId>
    <version>2.2.11</version>
</dependency>
<dependency>
    <groupId>com.sun.xml.bind</groupId>
    <artifactId>jaxb-impl</artifactId>
    <version>2.2.11</version>
</dependency>
-->
<!-- https://mvnrepository.com/artifact/org.json/json -->
<dependency>
    <groupId>org.json</groupId>
    <artifactId>json</artifactId>
    <version>20180813</version>
</dependency>

<!-- https://mvnrepository.com/artifact/org.wildfly/wildfly-naming-client 11-12-2019-->
<dependency>
    <groupId>org.wildfly</groupId>
    <artifactId>wildfly-naming-client</artifactId>
    <version>1.0.11.Final</version>
</dependency>

<dependency> <!-- added 19-12-2019 necessary for run file !!! -->
    <groupId>mysql</groupId>
    <artifactId>mysql-connector-java</artifactId>
    <version>${mysql.connectorJ.version}</version>
</dependency>

<dependency>
    <groupId>org.eclipse.microprofile</groupId>
    <artifactId>microprofile</artifactId>
    <version>3.3</version>
    <type>pom</type>
    <scope>provided</scope>
</dependency>
<!--
    <dependency>
        <groupId>javax.faces</groupId>
        <artifactId>javax.faces-api</artifactId>
        <version>2.3</version>
        <scope>provided</scope>
    </dependency>
   -->
   <!-- https://mvnrepository.com/artifact/org.apache.maven/maven-archiver new 16-03-2020-->
<dependency>
    <groupId>org.apache.maven</groupId>
    <artifactId>maven-archiver</artifactId>
    <version>${maven.archiver.plugin.version}</version>
</dependency>
<!-- https://mvnrepository.com/artifact/org.codehaus.mojo/buildnumber-maven-plugin new 17-02-2020
<dependency>
    <groupId>org.codehaus.mojo</groupId>
    <artifactId>buildnumber-maven-plugin</artifactId>
    <version>1.4</version>
</dependency>
-->
</dependencies>

 <build>

 <!--  new 16-11-2018 
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.6.0</version>
          <executions>
             <execution>
                <id>myLC-execution</id>
                <goals>
                   <goal>exec</goal>
                </goals>
             </execution>
          </executions>
          
          
          
        </plugin>
      </plugins>
    </pluginManagement>
      
        maven.compiler.plugin.version
          
            
   -->  
     
 <plugins>
     <!-- new 26-03-2019 https://www.baeldung.com/maven-dependency-latest-version 
     <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.7</version>
        <configuration>
            <generateBackupPoms>false</generateBackupPoms>
        </configuration>
</plugin>
     -->
     
     
   <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version> 
                <configuration>
                    <fork>true</fork>
                    <meminitial>128m</meminitial><!-- was 128 -->
                    <maxmem>2048m</maxmem> <!-- was 1024-->
             <!--       <source>11</source>
                    <target>11</target> -->
                    <release>${java.version}</release><!--  23-12-2019 replace source and target -->
                    <encoding>${project.build.sourceEncoding}</encoding> <!-- new 01-11-2018
      https://docs.oracle.com/javase/10/tools/javac.htm#JSWOR627
https://www.baeldung.com/javac
https://github.com/spring-projects/spring-boot/issues/6421  for -processing
Supplies warnings to enable or disable, separated by comma. 
Precede a key by a hyphen (-) to disable the specified warning.
-->
                    <compilerArgs> <!-- new 01-11-2018  --> 
                        --enable-preview
                        <arg>-Xlint:all,-rawtypes,-serial,-processing,-path</arg>
                           <!-- new 10-01-2019 activer nouvelle version switch https://mkyong.com/java/java-how-to-enable-the-preview-language-features/--> 
                        <!-- new 01/09/2019 https://cwiki.apache.org/confluence/display/NETBEANS/Apache+NetBeans+11.1-->
                    </compilerArgs>
                   <!-- <compilerArgs> deux tirest ici enable-preview</compilerArgs>  new 23-12-2019 fait disparaitre lignes jaunes  -->

                    <showDeprecation>true</showDeprecation> <!--  mod 08-02-2018 was true -->
                    <showWarnings>true</showWarnings> <!-- new 20/01/2013 -->
                    <verbose>false</verbose>   <!--new 20/01/2013 'true' donne liste de toutes les sources -->
           <!--         <debug>true</debug> mod 13-01-2019 -->
                  <!--  <debuglevel>lines,vars,source</debuglevel> new 17/11/2018 -->
                </configuration>
            </plugin>
     <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven.dependency.plugin.version}</version> <!-- https://maven.apache.org/plugins/maven-dependency-plugin/ -->
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${endorsed.dir}</outputDirectory>
                            <silent>true</silent>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>javax</groupId>
                                    <artifactId>javaee-endorsed-api</artifactId>
                                    <version>7.0</version>
                                    <type>jar</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>

                    <execution>
                        <id>analyze</id>
                        <goals>
                            <goal>properties</goal> <!-- was analyze-only -->
                        </goals>
                        <configuration>
                            <skip>false</skip>
                            <failOnWarning>true</failOnWarning>
                            <verbose>true</verbose>
                            <outputXML>true</outputXML>
                        </configuration>
                 </execution>
                    
                </executions>
            </plugin>
  <!-- new 27/05/2014 yes yes : c'est pour forcer la version à utiliser ! ! ! ! !-->
<plugin>
     <groupId>org.apache.maven.plugins</groupId>
     <artifactId>maven-clean-plugin</artifactId>
     <version>3.1.0</version>  <!-- mod 29/05/2018 - was 2.6.1-->
</plugin>

<!-- new 27/05/2014 yes yes : c'est pour forcer la version à utiliser ! ! ! ! !-->                      
<plugin>
     <groupId>org.apache.maven.plugins</groupId>
     <artifactId>maven-resources-plugin</artifactId>
     <version>${maven.resources.plugin.version}</version>
     <configuration>
         <encoding>${project.build.sourceEncoding}</encoding>
     </configuration>
</plugin>

<plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native2ascii-maven-plugin</artifactId>
                <version>1.0-beta-1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>native2ascii</goal>
                        </goals>
                        <configuration>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <src>src/main/resources/messages</src>
                            <dest>target/classes/messages</dest>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
<!-- new 27/05/2014 yes yes : c'est pour forcer la version à utiliser ! ! ! ! !-->
<plugin>
     <groupId>org.apache.maven.plugins</groupId>
     <artifactId>maven-war-plugin</artifactId>
     <version>${maven.war.plugin.version}</version>
          <configuration>
  <!--  http://maven.apache.org/shared/maven-archiver/index.html -->
             <archive> 
               <addMavenDescriptor>true</addMavenDescriptor> 
               <index>false</index> 
               <forced>true</forced>
        <!--   <pomPropertiesFile>true</pomPropertiesFile>  
               <manifestFile> son propre fichier</manifestFile> -->
               <manifest> 
                 <addClasspath>false</addClasspath>
                 <classpathPrefix>**by LC**</classpathPrefix>
                 <classpathLayoutType>repository</classpathLayoutType>
                 <addDefaultEntries>true</addDefaultEntries>
                 <addDefaultImplementationEntries>true</addDefaultImplementationEntries> 
                 <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries> 
                 <addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
                 <addExtensions>false</addExtensions>
                 
                 <mainClass>Main-Class entry by LC</mainClass>
                 <packageName>Package by LC</packageName>
               </manifest> 
               <manifestEntries> 
                 <artifactId>${project.artifactId}</artifactId> 
                 <groupId>${project.groupId}</groupId> 
                 <version>${project.version}</version> 
               </manifestEntries> 
               <manifestSections>
                   <manifestSection>
                <name>foo</name>
                <manifestEntries>
                  <mode>development</mode>
                  <url>${project.url}</url>
                  <Foo-Version>${project.version}</Foo-Version>
                  <Foo-Hash>${buildNumber}</Foo-Hash>
                </manifestEntries>
              </manifestSection>
              <manifestSection>
                <name>bar</name>
                <manifestEntries>
                  <id>nice bar</id>
                  <Pgsql>jdbc:postgresql://${pg.host}:${pg.port}/${pg.db}</Pgsql>
                </manifestEntries>
              </manifestSection>

               </manifestSections>
    
             </archive> 
              <packagingExcludes>pom.xml</packagingExcludes> <!-- new 06-09-2018  --> 
              <failOnMissingWebXml>false</failOnMissingWebXml>
          </configuration>
</plugin>
<!-- new 27/05/2014 yes yes : c'est pour forcer la version à utiliser enlevé 05-01-2020
<plugin>
     <groupId>org.apache.maven.plugins</groupId>
     <artifactId>maven-install-plugin</artifactId>
     <version>${maven.install.plugin.version}</version>  was 2.5.2
</plugin>
-->
<!-- https://mvnrepository.com/artifact/org.wildfly.plugins/wildfly-maven-plugin
https://docs.jboss.org/wildfly/plugins/maven/latest/examples/deployment-example.html
https://javalibs.com/plugin/org.wildfly.plugins/wildfly-maven-plugin
-->

<plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>${maven.wildfly.plugin.version}</version>
                <configuration>
                            <jvm-args>  </jvm-args>
                </configuration>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <goals>
                           <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
<!-- <goal>deploy</goal>  déplacé de line 755-->
<plugin>
    <groupId>org.jvnet.jax-ws-commons</groupId>
    <artifactId>jaxws-maven-plugin</artifactId>
    <version>2.3.1-b20141205.0945</version>
    <configuration>
        <!-- Needed with JAXP 1.5 -->
        <vmArgs>
            <vmArg>-Djavax.xml.accessExternalSchema=all</vmArg>
        </vmArgs>
    </configuration>
</plugin>
<!-- New 23/10/2015 
Use the properties-maven-plugin to write all the pom properties to a file and then read it in your program
http://stackoverflow.com/questions/11500533/in-java-code-how-to-access-maven-properties-defined-in-pom
-->
<plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
            <execution>
                <phase>generate-resources</phase>
                <goals>
                    <goal>write-project-properties</goal>
                </goals>
                <configuration>
                   <outputFile>${project.build.outputDirectory}/myPOM.properties</outputFile>  
             <!--        <outputFile>/src/main/resources/myPOM.properties</outputFile> -->
                </configuration>
           
            </execution>
        </executions>
    </plugin>
<!-- enlevé 01-11-2018
<plugin>
	<artifactId>maven-surefire-plugin</artifactId>
	<version>2.19.1</version>
	<dependencies>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-surefire-provider</artifactId>
			<version>1.0.0-M3</version>
		</dependency>
                <dependency>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter-engine</artifactId>
                    <version>5.0.0-M3</version>
                </dependency>
	</dependencies>
</plugin>
-->
<!-- new 07/01/2019 
<plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.6.0</version>
        <executions>
          <execution>
     
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <executable>maven</executable>
     ;;;   optional;;;
          <workingDirectory>/tmp</workingDirectory>
          <arguments>
            <argument>-X</argument>
            <argument>myproject:dist</argument>
      
          </arguments>
</configuration>
</plugin>
-->
<!--<plugin>  new 7-03-2020 https://www.yegor256.com/2014/07/03/how-to-read-manifest-mf.html 
  <groupId>org.codehaus.mojo</groupId>
  <artifactId>buildnumber-maven-plugin</artifactId>
   <version>1.4</version>
  <executions>
    <execution>
      <goals>
        <goal>create</goal>
      </goals>
    </execution>
  </executions>
</plugin>
-->
</plugins>

<!-- New 23/10/2015By default the Maven resources plug-in  will not do text substitution (filtering),
 so it will need to be enabled within the <build> section of the pom.xml file.
-->
<resources>
   <resource>
      <directory>src/main/resources</directory>
      <filtering>true</filtering>
   </resource>
</resources>

</build>
    
<repositories>
<!--    
    <repository>
        <id>sonatype-oss-public</id>
        <url>https://oss.sonatype.org/content/groups/public/</url>
        <snapshots>
            <enabled>true</enabled>
        </snapshots>
  </repository>
-->
    
    
 <!-- new 1/3/2016 http://doduck.fr/maven-ajouter-local-jar/ 
    http://doduck.com/adding-local-jar-in-maven-local-repository/ -->
    <repository>
         <id>my-local-repository</id>
         <url>file:///${project.basedir}/myrepo</url>
    </repository>
    
     <repository>
      <releases> <!-- new 30/04/2014 -->
        <enabled>false</enabled>
        <updatePolicy>always</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled> <!-- was true -->
        <updatePolicy>never</updatePolicy>
        <checksumPolicy>fail</checksumPolicy>
      </snapshots>
        
        
        <id>maven central</id>
        <name>Central maven repository</name>
        <url>http://repo.maven.apache.org/maven2/</url>

        <layout>default</layout>

    </repository>

</repositories>

<pluginRepositories>
    <pluginRepository>
      <id>central</id>
      <name>Maven Plugin Repository</name>
      <url>https://repo.maven.apache.org/maven2/</url>

      <!--<url>http://search.maven.org/maven2</url>  mod 16/07/2013 -->
    </pluginRepository>

</pluginRepositories>
<!-- new 25/05/2015   -->
<reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.8</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>dependencies</report>
              <report>project-team</report>
              <report>mailing-list</report>
              <report>cim</report>
              <report>issue-tracking</report>
              <report>license</report>
              <report>scm</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <configLocation>config/sun_checks.xml</configLocation>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

</project>