<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html
      xmlns="http://www.w3.org/1999/xhtml"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"
      xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
>
<ui:composition template="templates/masterTemplate.xhtml">
<!--
<ui:define name="metadata">
    <f:metadata>
        <f:viewAction action="#{courseC.LoadParArray()}"/>
    </f:metadata>
</ui:define>
-->

<ui:define name="title">Score Stableford Page </ui:define>
<ui:define name="help">
    <ui:include src="/help/help_score.xhtml"/>
</ui:define>
<ui:define name="content">

<h:graphicImage 
                name="images/golfcard.png"
                alt="image missing :golf_round.jpg"
                style="float: left;">
</h:graphicImage>

<h:graphicImage 
                name="images/golfcard.png"
                alt="image missing :golf_round.jpg"
                style="float: right;">
</h:graphicImage>
<h:form id="score_stableford" enctype="application/x-www-form-urlencoded" >

<ui:include src="include/include_summary.xhtml"/>

<p:panelGrid id="panelgrid2"
             columns="10"
             styleClass="alignmentLeft"
             style="text-align:center;"
             columnClasses="className"
             rendered="#{courseC.round.roundHoles eq 18 or courseC.round.roundStart eq 1}"
             >
<f:facet name="header">
    <h1>#{msg['title.score.results']}</h1>
    
</f:facet>
<h:outputText value="&nbsp;&nbsp;#{msg['score.aller']}"
              style="background-color: lightskyblue;" />
   <c:forEach var="i" begin="01" end="09" step="1">
      <h:outputText value="${i}"
              style="font-size:1.5em;" />
   </c:forEach>

<!-- second line : par -->    
<h:outputText value="&nbsp;&nbsp;#{msg['par.par']}"
              style="background-color: lightskyblue;"
              />
   <c:forEach var="i" begin="01" end="09" step="1">
       <h:outputText value="#{courseC.parArray[i-1]}"
                     style="font-style: italic" />
   </c:forEach>

<!-- third line :score -->    
<h:outputText value="#{msg['score.gross']}"   />
 <!-- on enregistre les rÃ©sultats dans une table style="font-style:italic"
 on doit utiliser les validations locales car autres validations ne fonctionnent que
 avec String et non avec une table !! -->
    <c:forEach var="i" begin="01" end="09" step="1">
        <h:inputText  id="score01-09${i}"
                label="ScoreLC"
                value="#{courseC.scoreStableford.holes[i-1]}"
                size="2"
                onchange="repl(this);"
                required="true"
              
                requiredMessage="#{msg['score.hole.notnull']} : #{i}"
                validatorMessage="#{msg['score.hole.minMAX']} : #{i}"
                    >
            <f:validateLongRange minimum="1" maximum="12" />
        </h:inputText>
    </c:forEach>

</p:panelGrid >

<p/>
<p:panelGrid id="panelgrid3"
             columns="10"
             styleClass="alignmentLeft"
             columnClasses="className"
             style="text-align:center;"
             rendered="#{courseC.round.roundHoles eq 18 or courseC.round.roundStart eq 10}"
             >
    <h:outputText value="#{msg['score.return']}"   />
    <c:forEach var="i" begin="10" end="18" step="1">
         <h:outputText value="${i}"
                       style="font-size:1.5em;" />
    </c:forEach>
<!-- second line : par new 18/06/2014 -->    
<h:outputText value="&nbsp;&nbsp;#{msg['par.par']}"
              style="background-color: lightskyblue;"
              />
   <c:forEach var="i" begin="10" end="18" step="1">
       <h:outputText value="${courseC.parArray[i-1]}"
                     style="font-style: italic"/>
   </c:forEach>

<h:outputText value="#{msg['score.gross']}" />
    <c:forEach var="i" begin="10" end="18" step="1">
            <h:inputText  id="score10-18${i}"
                    label="ScoreLC"
                    value="#{courseC.scoreStableford.holes[i-1]}"
                    size="2"
                    onchange="repl(this);"
                    required="true"
                  
                    requiredMessage="#{msg['score.hole.notnull']} : #{i}"
                    validatorMessage="#{msg['score.hole.minMAX']} : #{i}"
                    >
            <f:validateLongRange minimum="1" maximum="12" />
      </h:inputText>
    </c:forEach>

</p:panelGrid>

<p:panelGrid 
    id="panelgrid4" 
    
    columnClasses="className"
    columns="2">
<f:facet name="footer">
        <p:commandButton 
                         id="button01"
                         value="#{msg['button.score.create']}"
                         update="growl-msg"
                         ajax="false"
                         immediate="false"
                         icon="ui-icon-disk"
                         action="#{courseC.createScoreStableford}"/>
        
        <!--   rendered="#{courseC.showButtonCreateScore}"  -->
        <p:commandButton 
                         id="button02"
                         value="#{msg['button.score.statistics']}"
                         update="growl-msg"
                         immediate="true"
                         ajax="false"
                         rendered="#{courseC.showButtonCreateStatistics}"
                         icon="ui-icon-pencil"
                         style="float: right;"
                         action="score_statistics.xhtml"/>
        <p:commandButton value="#{msg['button.scorecard']}"
                         update="growl-msg"
                         immediate="true"
                         icon="fa fa-map-o"
                         rendered="#{courseC.scoreStableford.scoreCardOK}"
                         action="#{courseC.show_scorecard()}"/>

</f:facet>

    <!-- 
     rendered="#{courseC.showButtonCreateStatistics}"
    rendered="#{not courseC.nextScorecard}"
                          rendered="#{courseC.nextScorecard}"   --> 
    
</p:panelGrid>

</h:form>
</ui:define>
</ui:composition>
</html>