<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
       xmlns:h="http://xmlns.jcp.org/jsf/html"
       xmlns:f="http://xmlns.jcp.org/jsf/core"
      >
<h:head>
<meta charset="utf-8"/>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
<title>Courses in Belgium</title>
<script type="text/javascript"
        src="http://maps.google.com/maps/api/js?libraries=places">
</script>
<script type="text/javascript">
 //"use strict";
 console.info("starting search_golf.js");
 window.onerror = function (errorMsg, url, lineNumber, column, errorObj) {
    console.info('Error: ' + errorMsg + ' Script: ' + url + ' Line: ' + lineNumber
        + ' Column: ' + column + ' StackTrace: ' +  errorObj);
    alert('Error: ' + errorMsg + ' Script: ' + url + ' Line: ' + lineNumber
        + ' Column: ' + column + ' StackTrace: ' +  errorObj);
};
  var map, places, iw, shadow;
  var markers = [];
  var autocomplete;
  var service;
  var addrLocation;
  var geocoder;
  var MARKER_PATH = 'http://maps.gstatic.com/intl/en_us/mapfiles/marker_green';
  var SHADOW_URL = "http://maps.gstatic.com/intl/en_us/mapfiles/markers/marker_sprite.png";
  var hostnameRegexp = new RegExp('^https?://.+?/');
     var google; //fake
     
  function initialize() {
    //var myLatlng = new google.maps.LatLng(37.783259, -122.402708);
console.info("initialize");
    geocoder = new google.maps.Geocoder();
    findAddress();
    var myOptions = {
     	zoom: 11,
     	center: addrLocation,
    	mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
    
    autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'));
    places = new google.maps.places.PlacesService(map);
    google.maps.event.addListener(autocomplete, 'place_changed', function() {
        place_changed();
      });
    
    shadow = new google.maps.MarkerImage(
    	      SHADOW_URL,
    	      new google.maps.Size(32,37),
    	      new google.maps.Point(22,0),
    	      new google.maps.Point(8, 32)
    	    ); 
    //populate the map
    search();
  }
  
  function place_changed() {
	    var place = autocomplete.getPlace();
	    map.panTo(place.geometry.location);
	    map.setZoom(11);
	    search();
	}
  
 
  function showSelectedPlace() {
      console.info("starting function showSelectedPlace");
    clearResults();
    clearMarkers();
    var place = autocomplete.getPlace();
    map.panTo(place.geometry.location);
    markers[0] = new google.maps.Marker({
      position: place.geometry.location,
      map: map
    });
    iw = new google.maps.InfoWindow({
      content: getIWContent(place)
    });
    iw.open(map, markers[0]);
  }
 
  function search() {
      console.info("starting function search");
    var type;
    for (var i = 0; i < document.controls.type.length; i++) {
      if (document.controls.type[i].checked) {
        type = document.controls.type[i].value;
      }
    }
   
    autocomplete.setBounds(map.getBounds());
    var address = document.getElementById("autocomplete").value;
    var golf_course_near='golf courses near ';
    var query;
    
    if (type === 'golf') {
        query = 'golf courses near ';
    }
    if (type === 'restaurant') {
        query = 'restaurants near ';
    }
    if (type === 'bar') {
        query = 'bars near ';
    }
    
    var search = {
      bounds: map.getBounds(),
      query: query.concat(address)
    };
   
    
    places.textSearch(search, function(results, status) {
        if (status === google.maps.places.PlacesServiceStatus.OK) {
          clearResults();
          clearMarkers();
          for (var i = 0; i lt; results.length; i++) {
              var markerLetter = String.fromCharCode("A".charCodeAt(0) + i);
              var markerIcon = MARKER_PATH + markerLetter + ".png";
              markers[i] = new google.maps.Marker({
                position: results[i].geometry.location,
                animation: google.maps.Animation.DROP,
                icon: markerIcon,
                shadow: shadow
              });
              google.maps.event.addListener(markers[i], 'click', getDetails(results[i], i));
              setTimeout(dropMarker(i), i * 100);
              addResult(results[i], i);
            }
        }
      });
  }//end search()
 
  function clearMarkers() {
    for (var i = 0; i lt; markers.length; i++) {
      if (markers[i]) {
        markers[i].setMap(null);
        markers[i] === null;
      }
    }
  }
 
  function dropMarker(i) {
    return function() {
      markers[i].setMap(map);
    };
  }
 
  function addResult(result, i) { 
       console.info("starting function addResult");
    var results = document.getElementById("results");
    var markerLetter = String.fromCharCode("A".charCodeAt(0) + i);
    var markerIcon = MARKER_PATH + markerLetter + ".png";
    
    var tr = document.createElement('tr');   
    tr.style.backgroundColor = (i% 2 === 0 ? '#F0F0F0' : '#FFFFFF');
    tr.onclick = function() {
      google.maps.event.trigger(markers[i], 'click');
    };
   
    var iconTd = document.createElement('td');
    var nameTd = document.createElement('td');
    var icon = document.createElement('img');
    icon.src = markerIcon;
    icon.setAttribute("class", "placeIcon");
    icon.setAttribute("className", "placeIcon");
    var name = document.createTextNode(result.name);
    iconTd.appendChild(icon);
    nameTd.appendChild(name);
    tr.appendChild(iconTd);
    tr.appendChild(nameTd);
    results.appendChild(tr);
  }
 
  function clearResults() {
    var results = document.getElementById("results");
    while (results.childNodes[0]) {
      results.removeChild(results.childNodes[0]);
    }
  }
 
  function getDetails(result, i) {
    return function() {
      places.getDetails({
          reference: result.reference
      }, showInfoWindow(i));
    };
  }
 
  function showInfoWindow(i) {
    return function(place, status) {
      if (iw) {
        iw.close();
        iw = null;
      }
     
      if (status === google.maps.places.PlacesServiceStatus.OK) {
        iw = new google.maps.InfoWindow({
          content: getIWContent(place)
        });
        iw.open(map, markers[i]);        
      }
    };
  }
  
//find address function
  function findAddress() {
       console.info("starting function findAdress");
       var address = document.getElementById("autocomplete").value;

      // script uses our 'geocoder' in order to find location by address name
      geocoder.geocode( { 'address': address}, function(results, status) {
          if (status === google.maps.GeocoderStatus.OK) { // and, if everything is ok

              // we will center map
             addrLocation = results[0].geometry.location;
              map.setCenter(addrLocation);

              // store current coordinates into hidden variables
             // document.getElementById('lat').value = results[0].geometry.location.$a;
              //document.getElementById('lng').value = results[0].geometry.location.ab;

              // and then - add new custom marker
              var addrMarker = new google.maps.Marker({
                  position: addrLocation,
                  map: map,
                  title: results[0].formatted_address,
                  icon: 'marker.png'
              });
          } else {
              alert('Geocode was not successful for the following reason: ' + status);
          }
      });
  }
 
  function getIWContent(place) {
      console.info("starting function getIWContent");
	    var content = "";
	    content += '<table>';
	    content += '<tr class="iw_table_row">';
	    content += '<td style="text-align: right"><img class="hotelIcon" src="' + place.icon + '"/></td>';
	    content += '<td><b><a href="' + place.url + '">' + place.name + '</a></b></td></tr>';
	    content += '<tr class="iw_table_row"><td class="iw_attribute_name">Address:</td><td>' + place.vicinity + '</td></tr>';
	    if (place.formatted_phone_number) {
	      content += '<tr class="iw_table_row"><td class="iw_attribute_name">Telephone:</td><td>' + place.formatted_phone_number + '</td></tr>';      
	    }
	    if (place.rating) {
	      var ratingHtml = '';
	      for (var i = 0; i lt; 5; i++) {    // lt; remplace plus petit que
	        if (place.rating lt; (i + 0.5)) {
	          ratingHtml += '&#10025;';
	        } else {
	          ratingHtml += '&#10029;';
	        }
	      }
	      content += '<tr class="iw_table_row"><td class="iw_attribute_name">Rating:</td><td><span id="rating">' + ratingHtml + '</span></td></tr>';
	    }
	    if (place.website) {
	      var fullUrl = place.website;
	      var website = hostnameRegexp.exec(place.website);
	      if (website === null) {
	        website = 'http://' + place.website + '/';
	        fullUrl = website;
	      }
	      content += '<tr class="iw_table_row"><td class="iw_attribute_name">Website:</td><td><a href="' + fullUrl + '">' + website + '</a></td></tr>';
	    }
	    content += '</table>';
	    return content;
	  }
  
  function getIWContentTT(place) {
       console.info("starting function getIWContentTT");
	    var content = "";
	    content += '<table><tr><td>';
	    content += '<img class="placeIcon" src="' + place.icon + '"/></td>';
	    content += '<td><b><a href="' + place.url + '">' + place.name + '</a></b>';
	    content += '</td></tr></table>';
	    return content;
	  }
</script>
<style>
body {
  font-family: sans-serif;
  font-size: 14px;
}
table {
  font-size: 12px;
}
#map_canvas {
  position: absolute;
  width: 550px;
  height: 550px;
  top: 25px;
  left: 0px;
  border: 1px solid grey;
}
#listing {
  position: absolute;
  width: 200px;
  height: 500px;
  overflow: auto;
  left: 552px;
  top: 65px;
  cursor: pointer;
}
#controls {
  width: 200px;
  position: absolute;
  top: 0px;
  left: 552px;
  height: 60px;
  padding: 5px;
  font-size: 12px;
}
.placeIcon {
  width: 16px;
  height: 16px;
  margin: 2px;
}
#resultsTable {
  font-size: 12px;
  border-collapse: collapse;
}
#locationField {
  width: 400px;
  height: 25px;
  top: 0px;
  left: 0px;
  position: absolute;
   z-index: 1;
}
#autocomplete {
  width: 400px;
}
.placeIcon {
  width: 20px;
  height: 34px;
  margin: 4px;
}
.hotelIcon {
  width: 24px;
  height: 24px;
}
#rating {
  font-size: 13px;
  font-family: Arial Unicode MS;
}
#findhotels {
  text-align: right;
  width: 100px;
  font-size: 14px;
  padding: 4px;
  position: absolute;
}
.iw_table_row {
  height: 18px;
}
.iw_attribute_name {
  font-weight: bold;
  text-align: right;
}
</style>
</h:head>
<h:body style="margin:0px; padding:0px;" onload="initialize()">
  <div id="locationField">
    <input id="autocomplete" value="Norristown, PA" type="text" />
  </div>
  <div id="controls">
    <form name="controls">
    <input type="radio" name="type" value="golf" onclick="search()" checked="checked" />Golf Courses
    <input type="radio" name="type" value="restaurant" onclick="search()" />Restaurants<br/>
    <input type="radio" name="type" value="bar" onclick="search()" />Bars
    </form>
  </div>
  <div id="map_canvas"></div>
  <div id="listing"><table id="resultsTable"><tbody id="results"></tbody></table></div>
</h:body>
</html>

