<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
    xmlns:h="http://xmlns.jcp.org/jsf/html" 
    xmlns:f="http://xmlns.jcp.org/jsf/core">

  <h:head>
    <title>Place Player Autocomplete Address Form</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no"/>
    <meta charset="utf-8"/>
    <style type="text/css" >
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      #map {
        height: 100%;
      }
    </style>
    <link type="text/css" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/>
    <style>
      #locationField, #controls {
        position: relative;
        width: 480px;
      }
      #autocomplete {
        position: absolute;
        top: 0px;
        left: 0px;
        width: 99%;
      }
      .label {
        text-align: right;
        font-weight: bold;
        width: 100px;
        color: #303030;
      }
      #address {
        border: 1px solid #000090;
        background-color: #f0f0ff;
        width: 480px;
        padding-right: 2px;
      }
      #address td {
        font-size: 10pt;
      }
      .field {
        width: 99%;
      }
      .slimField {
        width: 80px;
      }
      .wideField {
        width: 200px;
      }
      #locationField {
        height: 20px;
        margin-bottom: 2px;
      }
    </style>
  </h:head>

  <h:body>
  <f:view id="view">
  <h:form id="form">
      
    <div id="locationField">
      <input id="autocomplete"
             type="text"
             
             placeholder="Enter here your address"
             onFocus="geolocate()" ></input>
    </div>

    <table id="address">
      <tr>
        <td class="label">Street address</td>
        <td class="wideField" colspan="2">
            <input class="field"
                   id="route"
                   disabled="true">
            </input>
        </td>
        <td class="slimField">
            <input class="field"
                   id="street_number"
                   disabled="true">
            </input>
        </td>
      </tr>
      <tr>
        <td class="label">City</td>
        <td class="wideField" colspan="3">
            <input class="field" 
                   id="locality"
                   disabled="true">
            </input>
        </td>
      </tr>
      <tr>
        <td class="label">State</td>
        <td class="wideField">
            <input class="field"
                   id="postal_code"
                   disabled="true">
            </input>
        </td>
        <td class="slimField">
            <input class="field"
              id="administrative_area_level_1"
              disabled="true">
            </input>
        </td>
        <td class="label">Zip code</td>

      </tr>
      <tr>
        <td class="label">Country</td>
        <td class="wideField" colspan="3">
            <input class="field"
              id="country"
              disabled="true">
             </input></td>
      </tr>
    </table>
    <h:panelGrid columns="2" > 
        <h:outputLabel value="Enter latitude" />
        <h:inputText id="latitude2"  value="#{courseC.player.playerFirstName}" size="20"/>
         <h:outputLabel value="Enter longitude" />
        <h:inputText id="longitude"  value="#{courseC.player.playerLastName}" size="20"/>
  
    </h:panelGrid>
    <script type="text/javascript">
// This example displays an address form, using the autocomplete feature
// of the Google Places API to help users fill in the information.
alert("start of main");
var google; //fake
var placeSearch, autocomplete;
var componentForm = {
  street_number: 'short_name',
  route: 'long_name',
  locality: 'long_name',
  administrative_area_level_1: 'short_name',
  country: 'long_name',
  postal_code: 'short_name'
};

function initAutocomplete() {
  // Create the autocomplete object, restricting the search to geographical
  // location types.
  alert("start of initautocomplete");
  autocomplete = new google.maps.places.Autocomplete(
      /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
      {types: ['geocode']});

  // When the user selects an address from the dropdown, populate the address
  // fields in the form.
  autocomplete.addListener('place_changed', fillInAddress);
}

// [START region_fillform]
function fillInAddress() {
    alert("start of fillInAddress");
  // Get the place details from the autocomplete object.
  var place = autocomplete.getPlace();

  for (var component in componentForm) {
    document.getElementById(component).value = '';
    document.getElementById(component).disabled = false;
  }

  // Get each component of the address from the place details
  // and fill the corresponding field on the form.
  for (var i = 0; i < place.address_components.length; i++) {
    var addressType = place.address_components[i].types[0];
    if(componentForm[addressType]) {
      var val = place.address_components[i][componentForm[addressType]];
      document.getElementById(addressType).value = val;
    }
  }
}
// [END region_fillform]

// [START region_geolocation]
// Bias the autocomplete object to the user's geographical location,
// as supplied by the browser's 'navigator.geolocation' object.
function geolocate() {
    alert("start of geolocate");
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var geolocation = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      var circle = new google.maps.Circle({
        center: geolocation,
        radius: position.coords.accuracy
      });
      autocomplete.setBounds(circle.getBounds());
    });
  }
}
// [END region_geolocation]

    </script>
    <script type="text/javascript">
        alert("start of initautocomplete");
   src="https://maps.googleapis.com/maps/api/js?libraries=places&amp;callback=initAutocomplete">
          </script>
  </h:form> 
  </f:view>      
  </h:body>
</html>