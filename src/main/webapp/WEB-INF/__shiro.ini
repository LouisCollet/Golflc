# =======================
# Shiro INI configuration
# =======================
[main]
#; Objects and their properties are defined here, Such as the securityManager, Realms and anything
#; else needed to build the SecurityManager

# set authentication filter to pass thru (redirect to login page and let auth be handled there)
;authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter

#; http://are-you-ready.de/blog/2017/05/06/apache-shiro-part-2-securing-a-jsf-java-ee-7-application/
#; Commented lines can start with either with an Octothorpe (# - aka the ‘hash’, ‘pound’ or ‘number’ sign) or a Semi-colon (‘;’)
#; set login url
user.loginUrl = /login_shiro.xhtml
authc.loginUrl = /login_shiro.xhtml
logout.redirectUrl = /club.xhtml
#; redirect url called after successful login -- was index.xhtml
authc.successUrl = /index.xhtml

authc.usernameParam = username
authc.passwordParam = password

;### see rememberMe and JSESSIONID cookie
authc.rememberMeParam = rememberMe

;### login error messages are returned to element with name shiroLoginFailure
authc.failureKeyAttribute = shiroLoginFailure

# Preconfigured password matcher that uses SHA-256 with 500000 hash iterations and a Salt
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
iniRealm.credentialsMatcher = $passwordMatcher

[users]
#; The 'users' section is for simple deployments when you only need a small number of statically-defined
#; set of User accounts.
user = password, admin
user2 = password2, editor
user3 = password3, author

admin = $shiro1$SHA-256$500000$GCgWy0vaMQDhVbFGT6jBEw==$GXGb/BduuS8goR2zoxOEeeIhzpKbTBo6Z/Fp0iZYtgs=, root,articles
user = $shiro1$SHA-256$500000$GCgWy0vaMQDhVbFGT6jBEw==$GXGb/BduuS8goR2zoxOEeeIhzpKbTBo6Z/Fp0iZYtgs=, Users
#;admin = test123

[roles]
#; The 'roles' section is for simple deployments  when you only need a small number
#; of statically-defined roles.
; http://www.baeldung.com/apache-shiro
admin = *
editor = articles:*
author = articles:compose,articles:save

[urls]
#; The 'urls' section is used for url-based security in web applications.  We'll discuss this section in the
#; Web documentation

# filter setup for secured pages
/javax.faces.resource/** = anon
/login_shiro.xhtml = authc

# when /shirotest/logout is invoked default redirect url / is used see LogoutFIlter.java
/logout = logout

;#user filter is needed for rememberme to work
;#to visit any page you must be authenticated (identity check during session). This should be used for sensitive parts of the application
#;/** = authc
#; to visit any page you must be known as a user (through remember me i.e.). If not you have to login
/** = user
#;/shiroTesting/** = authc
#;/shiroTesting/** = user

# make page only available for role
#;/admin/** = authc, roles[administrator]